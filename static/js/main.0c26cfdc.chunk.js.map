{"version":3,"sources":["components/ContactForm/ContactForm.module.css","transitionsStyles/fade.module.css","components/Filter/Filter.module.css","components/ContactItem/ContactItem.module.css","components/Alert/Alert.module.css","transitionsStyles/searchFadeStyles.module.css","App.module.css","components/Container/Container.module.css","transitionsStyles/appear.module.css","components/Title/Title.module.css","transitionsStyles/fadeAlertStyle.module.css","components/ContactList/ContactList.module.css","components/Container/Container.jsx","components/Title/Title.jsx","redux/contacts/contacts-actions.js","components/Alert/Alert.js","components/ContactForm/ContactForm.js","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/ContactList/ContactList.container.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","s","container","Title","title","level","TagNameTitle","CSSTransition","in","appear","timeout","classNames","appearStyles","unmountOnExit","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","Alert","text","Text","ContactForm","state","error","textAlert","inputNameId","inputNumberId","handleSubmit","e","preventDefault","props","contacts","some","contact","showAlert","onSubmit","reset","setState","setTimeout","handlerChange","currentTarget","value","this","alertStyle","form","label","htmlFor","input","type","placeholder","onChange","button","Component","connect","items","dispatch","contactsActions","filter","event","target","inputFilterId","filterWrapper","ContactItem","onDeleteContact","listItem","onClick","ContactList","TransitionGroup","component","contactList","map","fadeStyles","getVisibleContacts","allContacts","normalizedFilter","toLowerCase","includes","Wrapper","length","searchFadeStyles","createReducer","actions","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.0c26cfdc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__cIog3\",\"label\":\"ContactForm_label__OV0zD\",\"input\":\"ContactForm_input__3FK7Z\",\"button\":\"ContactForm_button__IaVdd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fade_enter__3UPMd\",\"enterActive\":\"fade_enterActive__2rFNP\",\"exit\":\"fade_exit__1KC1z\",\"exitActive\":\"fade_exitActive__1PAw_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__VaYsE\",\"label\":\"Filter_label__1lOBw\",\"input\":\"Filter_input__lxS35\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"ContactItem_text__17qXh\",\"button\":\"ContactItem_button__1JSVx\",\"listItem\":\"ContactItem_listItem__3Ybe8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Alert_Container__kpcae\",\"Text\":\"Alert_Text__2-zYl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"searchFadeStyles_enter__2b1eH\",\"enterActive\":\"searchFadeStyles_enterActive__24Vk6\",\"exit\":\"searchFadeStyles_exit__1BOLL\",\"exitActive\":\"searchFadeStyles_exitActive__1zQv3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"App_Wrapper__1KKN3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__vImyl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"appear_appear__2YZpx\",\"appearActive\":\"appear_appearActive__2cYJa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"Title_Title__1owNM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fadeAlertStyle_enter__1aZJ6\",\"enterActive\":\"fadeAlertStyle_enterActive__3GWHX\",\"exit\":\"fadeAlertStyle_exit__3ASmj\",\"exitActive\":\"fadeAlertStyle_exitActive__3DgDo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2ieJd\"};","import s from './Container.module.css';\n\nconst Container = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\n\nexport default Container;\n","import { CSSTransition } from 'react-transition-group';\nimport appearStyles from '../../transitionsStyles/appear.module.css';\nimport PropTypes from 'prop-types';\nimport s from './Title.module.css';\n\nconst Title = ({ title, level = 1 }) => {\n  const TagNameTitle = `h${level}`;\n  return (\n      <CSSTransition in ={true} appear={true} timeout={500} classNames={appearStyles} unmountOnExit>\n          <TagNameTitle className={s.Title}>{title}</TagNameTitle>\n      </CSSTransition>\n    )\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n  level: PropTypes.number.isRequired,\n};\n\nexport default Title;\n","import { createAction } from '@reduxjs/toolkit';\r\nimport shortid from 'shortid';\r\n\r\nconst addContact = createAction('contacts/add', (name, number) => ({\r\n    payload: {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    },\r\n}));\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nexport default { addContact, deleteContact, changeFilter };","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Alert.module.css';\r\n\r\nconst Alert = ({text}) => {\r\n  return (\r\n    <div className={s.Container}>\r\n      <p className={s.Text}>{text}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nAlert.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Alert;","import React, { Component } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\nimport shortid from 'shortid';\r\nimport Alert from '../Alert';\r\nimport alertStyle from '../../transitionsStyles/fadeAlertStyle.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n    error: false,\r\n    textAlert: '',\r\n  };\r\n\r\n  inputNameId = shortid.generate();\r\n  inputNumberId = shortid.generate();\r\n\r\n  handleSubmit = e => {\r\n    const { name, number } = this.state;\r\n    e.preventDefault();\r\n\r\n    if (name === '') {\r\n      this.showAlert('Please enter your contact name!');\r\n      return;\r\n    }\r\n\r\n    if (number === '') {\r\n      this.showAlert('Please enter the contact phone number!');\r\n      return;\r\n    }\r\n\r\n     if (this.props.contacts.some(contact => contact.name === name)) {\r\n       this.showAlert(`${name} is already in contacts`);\r\n       return;\r\n    }\r\n\r\n    this.props.onSubmit(name, number);\r\n    this.reset();\r\n  };\r\n\r\n  showAlert = (text) => {\r\n    this.reset();\r\n    this.setState({ error: true, textAlert: text });\r\n    setTimeout(() => this.setState({ error: false}), 2000);\r\n \r\n}\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  handlerChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { error, textAlert } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <CSSTransition in={error} classNames={alertStyle} timeout={250} unmountOnExit>\r\n          <Alert text={textAlert}/>\r\n        </CSSTransition>\r\n\r\n        <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <label className={s.label} htmlFor={this.inputNameId}>\r\n          <span>\r\n            Name   \r\n          </span>\r\n        </label>\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          id={this.inputNameId}\r\n          value={this.state.name}\r\n          name=\"name\"\r\n          placeholder=\"Enter your name\"\r\n          // required\r\n          onChange={this.handlerChange}\r\n        />\r\n        <label className={s.label} htmlFor={this.inputNumberId}>\r\n          <span>\r\n            Number   \r\n          </span>\r\n        </label>\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          id={this.inputNumberId}\r\n          value={this.state.number}\r\n          name=\"number\"\r\n          placeholder=\"Enter your number\"\r\n          onChange={this.handlerChange}\r\n        />\r\n        <button className={s.button}>Add contact</button>\r\n      </form>\r\n      </>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) => dispatch(contactsActions.addContact(name, number))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n\r\n","import { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nimport shortid from 'shortid';\n\nconst Filter = ({ name, onChange }) => {\n  let inputFilterId = shortid.generate();\n  return (\n    <div className={s.filterWrapper}>\n      <label className={s.label} htmlFor={inputFilterId}>\n        <span>\n          Find contacts by name\n        </span>\n      </label>\n      <input\n        className={s.input}\n        type=\"text\"\n        placeholder=\"Search\"\n        id={inputFilterId}\n        value={name}\n        onChange={onChange} />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  name: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: event => dispatch(contactsActions.changeFilter(event.target.value)),\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import s from './ContactItem.module.css';\n\nconst ContactItem = ({ name, number, onDeleteContact }) => {\n  return (\n    <>\n      <li className={s.listItem}>\n        <p className={s.text}>\n          {name} : {number}\n        </p>\n        <button className={s.button} type=\"button\" onClick={onDeleteContact}>\n          Delete\n        </button>\n      </li>    \n    </>\n  );\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n// import { connect } from 'react-redux';\n// import contactsActions from '../../redux/contacts/contacts-actions';\nimport s from './ContactList.module.css';\nimport fadeStyles from '../../transitionsStyles/fade.module.css';\nimport ContactItem from '../ContactItem';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <TransitionGroup component=\"ul\"  className={s.contactList}>\n      {contacts.map(({ name, number, id }) => (\n        <CSSTransition key={id} timeout={250} classNames={fadeStyles}>\n          <ContactItem name={name} number={number} key={id} onDeleteContact={() => onDeleteContact(id)} />\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\n\n ContactList.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ContactList;\n\n// const getVisibleContacts = (allContacts, filter) => {\n//     const normalizedFilter = filter.toLowerCase();\n\n//     return allContacts.filter(({name}) => name.toLowerCase().includes(normalizedFilter));\n//   };\n\n// const mapStateToProps = ({contacts: {items, filter}}) => ({\n//   contacts: getVisibleContacts(items,  filter),\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   onDeleteContact: (id) => dispatch(contactsActions.deleteContact(id)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\nimport ContactList from './ContactList';\r\n\r\nconst getVisibleContacts = (allContacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return allContacts.filter(({name}) => name.toLowerCase().includes(normalizedFilter));\r\n  };\r\n\r\nconst mapStateToProps = ({contacts: {items, filter}}) => ({\r\n  contacts: getVisibleContacts(items,  filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: (id) => dispatch(contactsActions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\n// import appearFormStyles from './transitionsStyles/appearFormStyles.module.css';\r\nimport fadeStyles from './transitionsStyles/fade.module.css';\r\nimport searchFadeStyles from './transitionsStyles/searchFadeStyles.module.css';\r\nimport s from './App.module.css';\r\nimport Container from './components/Container';\r\nimport Title from './components/Title';\r\nimport ContactForm from './components/ContactForm';\r\nimport Filter from './components/Filter';\r\nimport ContactList from './components/ContactList';\r\n\r\nconst App = ({ contacts }) => {\r\n  return (\r\n    <Container>\r\n      <div className={s.Wrapper}>\r\n        <Title title=\"Phonebook\" level={1} />\r\n        {/* <CSSTransition in={true} appear={true} timeout={500} classNames={appearFormStyles} unmountOnExit> */}\r\n          <ContactForm  />\r\n        {/* </CSSTransition> */}\r\n        <Title title=\"Contacts\" level={2} />\r\n        <CSSTransition in={contacts.length > 1 } classNames={searchFadeStyles} timeout={250} unmountOnExit>\r\n          <Filter  />\r\n        </CSSTransition>\r\n        <CSSTransition in={contacts.length !== 0} classNames={fadeStyles} timeout={250} unmountOnExit>\r\n          <ContactList  />\r\n        </CSSTransition>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n  contacts: state.contacts.items,\r\n});\r\n\r\nApp.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(App)\r\n\r\n// onSubmit={this.addContact}\r\n// contacts={visibleContacts} onDeleteContact={this.deleteContact}\r\n// value={filter} onChange={this.changeFilter}","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './contacts-actions';\r\n\r\n// console.log(actions.addContact.type);\r\n\r\nconst items = createReducer([], {\r\n  //actions.addContact.type вычисляемые свойства объекта(приведётся к строке и подставится свойство type )\r\n  [actions.addContact]: (state, {payload}) => [...state, payload],\r\n  [actions.deleteContact]: (state, {payload}) => state.filter(({id}) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n})","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage'\r\nimport logger from 'redux-logger';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\n// console.log(getDefaultMiddleware());\r\nconst middleware = [...getDefaultMiddleware({\r\n  serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n}\r\n\r\n//development or production\r\n// console.log(process.env.NODE_ENV);\r\nconst store = configureStore({\r\n  reducer: {\r\n  contacts: persistReducer (contactsPersistConfig, contactsReducer),\r\n},\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default {store, persistor};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport App from './App';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>  \n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}