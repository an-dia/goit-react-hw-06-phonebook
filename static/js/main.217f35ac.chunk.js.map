{"version":3,"sources":["transitionsStyles/fade.module.css","components/Filter/Filter.module.css","components/ContactItem/ContactItem.module.css","components/Alert/Alert.module.css","transitionsStyles/appearFormStyles.module.css","transitionsStyles/searchFadeStyles.module.css","components/Container/Container.module.css","transitionsStyles/appear.module.css","transitionsStyles/fadeAlertStyle.module.css","components/ContactList/ContactList.module.css","components/Container/Container.jsx","components/Title/Title.jsx","redux/contacts/contacts-types.js","redux/contacts/contacts-actions.js","components/Alert/Alert.js","components/ContactForm/ContactForm.js","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","Container","children","className","s","container","Title","title","level","TagNameTitle","CSSTransition","in","appear","timeout","classNames","appearStyles","unmountOnExit","style","color","name","number","type","types","payload","id","shortid","generate","contactId","value","Alert","text","Text","ContactForm","state","error","textAlert","inputNameId","inputNumberId","handleSubmit","e","preventDefault","props","contacts","some","contact","showAlert","onSubmit","reset","setState","setTimeout","handlerChange","currentTarget","this","alertStyle","form","label","htmlFor","input","onChange","button","Component","connect","items","dispatch","contactsActions","filter","event","target","inputFilterId","filterWrapper","ContactItem","onDeleteContact","listItem","onClick","getVisibleContacts","allContacts","normalizedFilter","toLowerCase","includes","TransitionGroup","component","contactList","map","fadeStyles","App","appearFormStyles","length","searchFadeStyles","combineReducers","rootReducer","contactsReducer","console","log","process","store","configureStore","reducer","devTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.217f35ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fade_enter__3UPMd\",\"enterActive\":\"fade_enterActive__2rFNP\",\"exit\":\"fade_exit__1KC1z\",\"exitActive\":\"fade_exitActive__1PAw_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__VaYsE\",\"label\":\"Filter_label__1lOBw\",\"input\":\"Filter_input__lxS35\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"ContactItem_text__17qXh\",\"button\":\"ContactItem_button__1JSVx\",\"listItem\":\"ContactItem_listItem__3Ybe8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Alert_Container__kpcae\",\"Text\":\"Alert_Text__2-zYl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"appearFormStyles_appear__3usfp\",\"appearActive\":\"appearFormStyles_appearActive__2Efmd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"searchFadeStyles_enter__2b1eH\",\"enterActive\":\"searchFadeStyles_enterActive__24Vk6\",\"exit\":\"searchFadeStyles_exit__1BOLL\",\"exitActive\":\"searchFadeStyles_exitActive__1zQv3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__vImyl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"appear_appear__2YZpx\",\"appearActive\":\"appear_appearActive__2cYJa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fadeAlertStyle_enter__1aZJ6\",\"enterActive\":\"fadeAlertStyle_enterActive__3GWHX\",\"exit\":\"fadeAlertStyle_exit__3ASmj\",\"exitActive\":\"fadeAlertStyle_exitActive__3DgDo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2ieJd\"};","import s from './Container.module.css';\n\nconst Container = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\n\nexport default Container;\n","import { CSSTransition } from 'react-transition-group';\nimport appearStyles from '../../transitionsStyles/appear.module.css';\nimport PropTypes from 'prop-types';\n\nconst Title = ({ title, level = 1 }) => {\n  const TagNameTitle = `h${level}`;\n  return (\n      <CSSTransition in ={true} appear={true} timeout={500} classNames={appearStyles} unmountOnExit>\n          <TagNameTitle style={{color: 'cornflowerblue'}}>{title}</TagNameTitle>\n      </CSSTransition>\n    )\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n  level: PropTypes.number.isRequired,\n};\n\nexport default Title;\n","const ADD = 'contacts/add';\r\nconst DELETE = 'contacts/delete';\r\nconst CHANGE_FILTER = 'contacts/changeFilter';\r\n\r\nexport default {\r\n  ADD,\r\n  DELETE,\r\n  CHANGE_FILTER,\r\n}\r\n","import shortid from 'shortid';\r\nimport types from './contacts-types';\r\n\r\nconst addContact = (name, number) => ({\r\n  type: types.ADD,\r\n  payload: {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    },\r\n});\r\n\r\nconst deleteContact = contactId => ({\r\n  type: types.DELETE,\r\n  payload: contactId,\r\n});\r\n\r\nconst changeFilter = value => ({\r\n  type: types.CHANGE_FILTER,\r\n   payload: value,\r\n});\r\n\r\nexport default { addContact, deleteContact, changeFilter };","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Alert.module.css';\r\n\r\nconst Alert = ({text}) => {\r\n  return (\r\n    <div className={s.Container}>\r\n      <p className={s.Text}>{text}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nAlert.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Alert;","import React, { Component } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\nimport shortid from 'shortid';\r\nimport Alert from '../Alert';\r\nimport alertStyle from '../../transitionsStyles/fadeAlertStyle.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n    error: false,\r\n    textAlert: '',\r\n  };\r\n\r\n  inputNameId = shortid.generate();\r\n  inputNumberId = shortid.generate();\r\n\r\n  handleSubmit = e => {\r\n    const { name, number } = this.state;\r\n    e.preventDefault();\r\n\r\n    if (name === '') {\r\n      this.showAlert('Please enter your contact name!');\r\n      return;\r\n    }\r\n\r\n    if (number === '') {\r\n      this.showAlert('Please enter the contact phone number!');\r\n      return;\r\n    }\r\n\r\n     if (this.props.contacts.some(contact => contact.name === name)) {\r\n       this.showAlert(`${name} is already in contacts`);\r\n       return;\r\n    }\r\n\r\n    this.props.onSubmit(name, number);\r\n    this.reset();\r\n  };\r\n\r\n  showAlert = (text) => {\r\n    this.reset();\r\n    this.setState({ error: true, textAlert: text });\r\n    setTimeout(() => this.setState({ error: false}), 2000);\r\n \r\n}\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  handlerChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { error, textAlert } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <CSSTransition in={error} classNames={alertStyle} timeout={250} unmountOnExit>\r\n          <Alert text={textAlert}/>\r\n        </CSSTransition>\r\n\r\n        <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <label className={s.label} htmlFor={this.inputNameId}>\r\n          {' '}\r\n          Name{' '}\r\n        </label>\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          id={this.inputNameId}\r\n          value={this.state.name}\r\n          name=\"name\"\r\n          onChange={this.handlerChange}\r\n        />\r\n        <label className={s.label} htmlFor={this.inputNumberId}>\r\n          {' '}\r\n          Number{' '}\r\n        </label>\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          id={this.inputNumberId}\r\n          value={this.state.number}\r\n          name=\"number\"\r\n          onChange={this.handlerChange}\r\n        />\r\n        <button className={s.button}>Add contact</button>\r\n      </form>\r\n      </>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) => dispatch(contactsActions.addContact(name, number))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n\r\n","import { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nimport shortid from 'shortid';\n\nconst Filter = ({ name, onChange }) => {\n  let inputFilterId = shortid.generate();\n  return (\n    <div className={s.filterWrapper}>\n      <label className={s.label} htmlFor={inputFilterId}>\n        {' '}\n        Find contacts by name{' '}\n      </label>\n      <input className={s.input} type=\"text\" id={inputFilterId} value={name} onChange={onChange} />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  name: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: event => dispatch(contactsActions.changeFilter(event.target.value)),\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import s from './ContactItem.module.css';\n\nconst ContactItem = ({ name, number, onDeleteContact }) => {\n  return (\n    <>\n      <li className={s.listItem}>\n        <p className={s.text}>\n          {name} : {number}\n        </p>\n        <button className={s.button} type=\"button\" onClick={onDeleteContact}>\n          Delete\n        </button>\n      </li>    \n    </>\n  );\n};\n\nexport default ContactItem;\n","import PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\nimport s from './ContactList.module.css';\nimport fadeStyles from '../../transitionsStyles/fade.module.css';\nimport ContactItem from '../ContactItem';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <TransitionGroup component=\"ul\" className={s.contactList}>\n      {contacts.map(({ name, number, id }) => (\n        <CSSTransition key={id} timeout={250} classNames={fadeStyles}>\n          <ContactItem name={name} number={number} key={id} onDeleteContact={() => onDeleteContact(id)} />\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\n\n const getVisibleContacts = (allContacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return allContacts.filter(({name}) => name.toLowerCase().includes(normalizedFilter));\n  };\n\nContactList.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\n// const mapStateToProps = state => {\n//   const { items, filter } = state.contacts;\n//   const visibleContacts = getVisibleContacts(items, filter);\n\n//   return {\n//     contacts: visibleContacts,\n//   }\n// };\n\nconst mapStateToProps = ({contacts: {items, filter}}) => ({\n  contacts: getVisibleContacts(items,  filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: (id) => dispatch(contactsActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React, { Component } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport appearFormStyles from './transitionsStyles/appearFormStyles.module.css';\r\nimport fadeStyles from './transitionsStyles/fade.module.css';\r\nimport searchFadeStyles from './transitionsStyles/searchFadeStyles.module.css';\r\n// import shortid from 'shortid';\r\nimport Container from './components/Container';\r\nimport Title from './components/Title';\r\nimport ContactForm from './components/ContactForm';\r\nimport Filter from './components/Filter';\r\nimport ContactList from './components/ContactList';\r\n// import Alert from './components/Alert';\r\n// import alertStyle from './transitionsStyles/fadeAlertStyle.module.css';\r\n\r\n class App extends Component {\r\n  state = {\r\n    // contacts: [\r\n    //   // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    //   // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    //   // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    //   // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    // ],\r\n    // filter: '',\r\n    // error: false,\r\n    // textAlert: '',\r\n  };\r\n\r\n  //   componentDidMount() {\r\n  //   const contacts = localStorage.getItem('contacts');\r\n  //   const parsedContacts = JSON.parse(contacts);\r\n\r\n  //   if (parsedContacts) {\r\n  //     this.setState({ contacts: parsedContacts });\r\n  //   }\r\n  // }\r\n\r\n  // componentDidUpdate(prevProps, prevState) {\r\n  //   if (this.state.contacts !== prevState.contacts) {\r\n  //     localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n  //   }\r\n  // }\r\n\r\n  // addContact = (name, number) => {\r\n  //   const contact = {\r\n  //     id: shortid.generate(),\r\n  //     name,\r\n  //     number,\r\n  //   };\r\n\r\n  //   if (this.state.contacts.some(contact => contact.name === name)) {\r\n  //     this.showAlert(`${name} is already in contacts`);\r\n  //   } else if (contact.name === '') {\r\n  //     this.showAlert('Please enter your contact name!');\r\n  //   } else if (contact.number === '') {\r\n  //     this.showAlert('Please enter the contact phone number!');\r\n  //   } else {\r\n  //     this.setState(({ contacts }) => ({\r\n  //       contacts: [contact, ...contacts],\r\n  //     }));\r\n  //   }\r\n  // };\r\n\r\n//   showAlert = (text) => {\r\n//     this.setState({ error: true, textAlert: text });\r\n//     setTimeout(() => this.setState({ error: false}), 2000);\r\n \r\n// }\r\n\r\n  // deleteContact = contactId => {\r\n  //   this.setState(prevState => ({\r\n  //     contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n  //   }));\r\n  // };\r\n\r\n  // changeFilter = e => {\r\n  //   this.setState({ filter: e.currentTarget.value });\r\n  // };\r\n\r\n  // getVisibleContacts = () => {\r\n  //   const { filter, contacts } = this.state;\r\n  //   const normalizedFilter = filter.toLowerCase();\r\n\r\n  //   return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\r\n  // };\r\n\r\n\r\n\r\n  render() {\r\n    // const { error, textAlert } = this.state;\r\n    // const visibleContacts = this.getVisibleContacts();\r\n\r\n    return (\r\n      <Container>\r\n        {/* <CSSTransition in={error} classNames={alertStyle} timeout={250} unmountOnExit>\r\n          <Alert text={textAlert}/>\r\n        </CSSTransition> */}\r\n        <Title title=\"Phonebook\" level={1} />\r\n        <CSSTransition in={true} appear={true} timeout={500} classNames={appearFormStyles} unmountOnExit>\r\n          <ContactForm  />\r\n        </CSSTransition>\r\n        <Title title=\"Contacts\" level={2} />\r\n        <CSSTransition in={this.props.contacts.length !== 0} classNames={searchFadeStyles} timeout={500} unmountOnExit>\r\n          <Filter  />\r\n        </CSSTransition>\r\n        <CSSTransition in={this.props.contacts.length !== 0} classNames={fadeStyles} timeout={250} unmountOnExit>\r\n          <ContactList  />\r\n        </CSSTransition>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts.items,\r\n});\r\n\r\nexport default connect(mapStateToProps)(App)\r\n\r\n// onSubmit={this.addContact}\r\n// contacts={visibleContacts} onDeleteContact={this.deleteContact}\r\n// value={filter} onChange={this.changeFilter}","import { combineReducers } from 'redux';\r\nimport types from './contacts-types';\r\n\r\nconst items = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD:\r\n      return [...state, payload];\r\n    \r\n    case types.DELETE:\r\n      return state.filter(({id}) => id !== payload)\r\n    \r\n    default:\r\n    return state;\r\n  }\r\n  \r\n};\r\n\r\nconst filter = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case types.CHANGE_FILTER:\r\n      return payload;\r\n    \r\n    default:\r\n    return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n})","import { combineReducers } from 'redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n//development or production\r\nconsole.log(process.env.NODE_ENV);\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__cIog3\",\"label\":\"ContactForm_label__OV0zD\",\"input\":\"ContactForm_input__3FK7Z\",\"button\":\"ContactForm_button__IaVdd\"};"],"sourceRoot":""}