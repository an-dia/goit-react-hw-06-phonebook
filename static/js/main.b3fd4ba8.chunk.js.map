{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactItem/ContactItem.module.css","transitionsStyles/fade.module.css","components/Alert/Alert.module.css","transitionsStyles/appearFormStyles.module.css","components/Container/Container.module.css","transitionsStyles/appear.module.css","components/ContactList/ContactList.module.css","transitionsStyles/fadeAlertStyle.module.css","transitionsStyles/searchFadeStyles.module.css","components/Container/Container.jsx","components/Title/Title.jsx","redux/contacts/contacts-types.js","redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.js","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Alert/Alert.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","Container","children","className","s","container","Title","title","level","TagNameTitle","CSSTransition","in","appear","timeout","classNames","appearStyles","unmountOnExit","style","color","name","number","type","types","payload","id","shortid","generate","contactId","value","ContactForm","state","inputNameId","inputNumberId","handleSubmit","e","preventDefault","props","onSubmit","reset","setState","handlerChange","currentTarget","form","this","label","htmlFor","input","onChange","button","Component","connect","dispatch","contactsActions","contacts","filter","event","target","inputFilterId","filterWrapper","ContactItem","onDeleteContact","listItem","text","onClick","getVisibleContacts","allContacts","normalizedFilter","toLowerCase","includes","items","TransitionGroup","component","contactList","map","fadeStyles","Alert","Text","App","error","textAlert","showAlert","setTimeout","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","setItem","stringify","alertStyle","appearFormStyles","combineReducers","rootReducer","contactsReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3fd4ba8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__VaYsE\",\"label\":\"Filter_label__1lOBw\",\"input\":\"Filter_input__lxS35\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"ContactItem_text__17qXh\",\"button\":\"ContactItem_button__1JSVx\",\"listItem\":\"ContactItem_listItem__3Ybe8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fade_enter__3UPMd\",\"enterActive\":\"fade_enterActive__2rFNP\",\"exit\":\"fade_exit__1KC1z\",\"exitActive\":\"fade_exitActive__1PAw_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Alert_Container__kpcae\",\"Text\":\"Alert_Text__2-zYl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"appearFormStyles_appear__3usfp\",\"appearActive\":\"appearFormStyles_appearActive__2Efmd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__vImyl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"appear_appear__2YZpx\",\"appearActive\":\"appear_appearActive__2cYJa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2ieJd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fadeAlertStyle_enter__1aZJ6\",\"enterActive\":\"fadeAlertStyle_enterActive__3GWHX\",\"exit\":\"fadeAlertStyle_exit__3ASmj\",\"exitActive\":\"fadeAlertStyle_exitActive__3DgDo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"searchFadeStyles_enter__2b1eH\",\"enterActive\":\"searchFadeStyles_enterActive__24Vk6\",\"exit\":\"searchFadeStyles_exit__1BOLL\",\"exitActive\":\"searchFadeStyles_exitActive__1zQv3\"};","import s from './Container.module.css';\n\nconst Container = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\n\nexport default Container;\n","import { CSSTransition } from 'react-transition-group';\nimport appearStyles from '../../transitionsStyles/appear.module.css';\nimport PropTypes from 'prop-types';\n\nconst Title = ({ title, level = 1 }) => {\n  const TagNameTitle = `h${level}`;\n  return (\n      <CSSTransition in ={true} appear={true} timeout={500} classNames={appearStyles} unmountOnExit>\n          <TagNameTitle style={{color: 'cornflowerblue'}}>{title}</TagNameTitle>\n      </CSSTransition>\n    )\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n  level: PropTypes.number.isRequired,\n};\n\nexport default Title;\n","const ADD = 'contacts/add';\r\nconst DELETE = 'contacts/delete';\r\nconst CHANGE_FILTER = 'contacts/changeFilter';\r\n\r\nexport default {\r\n  ADD,\r\n  DELETE,\r\n  CHANGE_FILTER,\r\n}\r\n","import shortid from 'shortid';\r\nimport types from './contacts-types';\r\n\r\nconst addContact = (name, number) => ({\r\n  type: types.ADD,\r\n  payload: {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    },\r\n});\r\n\r\nconst deleteContact = contactId => ({\r\n  type: types.DELETE,\r\n  payload: contactId,\r\n});\r\n\r\nconst changeFilter = value => ({\r\n  type: types.CHANGE_FILTER,\r\n   payload: value,\r\n});\r\n\r\nexport default { addContact, deleteContact, changeFilter };","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\nimport shortid from 'shortid';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  inputNameId = shortid.generate();\n  inputNumberId = shortid.generate();\n\n  handleSubmit = e => {\n    const { name, number } = this.state;\n    e.preventDefault();\n\n    this.props.onSubmit(name, number);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  handlerChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label className={s.label} htmlFor={this.inputNameId}>\n          {' '}\n          Name{' '}\n        </label>\n        <input\n          className={s.input}\n          type=\"text\"\n          id={this.inputNameId}\n          value={this.state.name}\n          name=\"name\"\n          onChange={this.handlerChange}\n        />\n        <label className={s.label} htmlFor={this.inputNumberId}>\n          {' '}\n          Number{' '}\n        </label>\n        <input\n          className={s.input}\n          type=\"tel\"\n          id={this.inputNumberId}\n          value={this.state.number}\n          name=\"number\"\n          onChange={this.handlerChange}\n        />\n        <button className={s.button}>Add contact</button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) => dispatch(contactsActions.addContact(name, number))\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n\n","import { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nimport shortid from 'shortid';\n\nconst Filter = ({ name, onChange }) => {\n  let inputFilterId = shortid.generate();\n  return (\n    <div className={s.filterWrapper}>\n      <label className={s.label} htmlFor={inputFilterId}>\n        {' '}\n        Find contacts by name{' '}\n      </label>\n      <input className={s.input} type=\"text\" id={inputFilterId} value={name} onChange={onChange} />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  name: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: event => dispatch(contactsActions.changeFilter(event.target.value)),\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import s from './ContactItem.module.css';\n\nconst ContactItem = ({ name, number, onDeleteContact }) => {\n  return (\n    <>\n      <li className={s.listItem}>\n        <p className={s.text}>\n          {name} : {number}\n        </p>\n        <button className={s.button} type=\"button\" onClick={onDeleteContact}>\n          Delete\n        </button>\n      </li>    \n    </>\n  );\n};\n\nexport default ContactItem;\n","import PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\nimport s from './ContactList.module.css';\nimport fadeStyles from '../../transitionsStyles/fade.module.css';\nimport ContactItem from '../ContactItem';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <TransitionGroup component=\"ul\" className={s.contactList}>\n      {contacts.map(({ name, number, id }) => (\n        <CSSTransition key={id} timeout={250} classNames={fadeStyles}>\n          <ContactItem name={name} number={number} key={id} onDeleteContact={() => onDeleteContact(id)} />\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\n\n const getVisibleContacts = (allContacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return allContacts.filter(({name}) => name.toLowerCase().includes(normalizedFilter));\n  };\n\nContactList.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\n// const mapStateToProps = state => {\n//   const { items, filter } = state.contacts;\n//   const visibleContacts = getVisibleContacts(items, filter);\n\n//   return {\n//     contacts: visibleContacts,\n//   }\n// };\n\nconst mapStateToProps = ({contacts: {items, filter}}) => ({\n  contacts: getVisibleContacts(items,  filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: (id) => dispatch(contactsActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Alert.module.css';\r\n\r\nconst Alert = ({text}) => {\r\n  return (\r\n    <div className={s.Container}>\r\n      <p className={s.Text}>{text}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nAlert.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Alert;","import React, { Component } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport appearFormStyles from './transitionsStyles/appearFormStyles.module.css';\nimport fadeStyles from './transitionsStyles/fade.module.css';\nimport searchFadeStyles from './transitionsStyles/searchFadeStyles.module.css';\nimport shortid from 'shortid';\nimport Container from './components/Container';\nimport Title from './components/Title';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport Alert from './components/Alert';\nimport alertStyle from './transitionsStyles/fadeAlertStyle.module.css';\n\nexport default class App extends Component {\n  state = {\n    // contacts: [\n    //   // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    //   // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    //   // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    //   // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    // ],\n    // filter: '',\n    error: false,\n    textAlert: '',\n  };\n\n    componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  // addContact = (name, number) => {\n  //   const contact = {\n  //     id: shortid.generate(),\n  //     name,\n  //     number,\n  //   };\n\n  //   if (this.state.contacts.some(contact => contact.name === name)) {\n  //     this.showAlert(`${name} is already in contacts`);\n  //   } else if (contact.name === '') {\n  //     this.showAlert('Please enter your contact name!');\n  //   } else if (contact.number === '') {\n  //     this.showAlert('Please enter the contact phone number!');\n  //   } else {\n  //     this.setState(({ contacts }) => ({\n  //       contacts: [contact, ...contacts],\n  //     }));\n  //   }\n  // };\n\n  showAlert = (text) => {\n    this.setState({ error: true, textAlert: text });\n    setTimeout(() => this.setState({ error: false}), 2000);\n \n}\n\n  // deleteContact = contactId => {\n  //   this.setState(prevState => ({\n  //     contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n  //   }));\n  // };\n\n  // changeFilter = e => {\n  //   this.setState({ filter: e.currentTarget.value });\n  // };\n\n  // getVisibleContacts = () => {\n  //   const { filter, contacts } = this.state;\n  //   const normalizedFilter = filter.toLowerCase();\n\n  //   return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n  // };\n\n\n\n  render() {\n    const { error, textAlert } = this.state;\n    // const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <Container>\n        <CSSTransition in={error} classNames={alertStyle} timeout={250} unmountOnExit>\n          <Alert text={textAlert}/>\n        </CSSTransition>\n        <Title title=\"Phonebook\" level={1} />\n        <CSSTransition in={true} appear={true} timeout={500} classNames={appearFormStyles} unmountOnExit>\n          <ContactForm  />\n        </CSSTransition>\n        <Title title=\"Contacts\" level={2} />\n        {/* <CSSTransition in={visibleContacts.length !== 0} classNames={searchFadeStyles} timeout={500} unmountOnExit> */}\n          <Filter  />\n        {/* </CSSTransition> */}\n        {/* <CSSTransition in={visibleContacts.length !== 0} classNames={fadeStyles} timeout={250} unmountOnExit> */}\n          <ContactList  />\n        {/* </CSSTransition> */}\n      </Container>\n    );\n  }\n}\n\n// onSubmit={this.addContact}\n// contacts={visibleContacts} onDeleteContact={this.deleteContact}\n// value={filter} onChange={this.changeFilter}","import { combineReducers } from 'redux';\r\nimport types from './contacts-types';\r\n\r\nconst items = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD:\r\n      return [...state, payload];\r\n    \r\n    case types.DELETE:\r\n      return state.filter(({id}) => id !== payload)\r\n    \r\n    default:\r\n    return state;\r\n  }\r\n  \r\n};\r\n\r\nconst filter = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case types.CHANGE_FILTER:\r\n      return payload;\r\n    \r\n    default:\r\n    return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n})","import { createStore, combineReducers  } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__cIog3\",\"label\":\"ContactForm_label__OV0zD\",\"input\":\"ContactForm_input__3FK7Z\",\"button\":\"ContactForm_button__IaVdd\"};"],"sourceRoot":""}